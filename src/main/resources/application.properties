spring.application.name=Garja
server.port=8085
spring.datasource.url=jdbc:mysql://localhost:3306/garja
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


cloudinary.cloud-name=dzyhoeurm
cloudinary.api-key=826648439174773
cloudinary.api-secret=wI6oL1bHuwTtDgaq3XBKZuZVpTQ


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


razorpay.key.id=rzp_test_ZzKJz2egIV36gC
razorpay.key.secret=W9szlmyiAEA6UVOGO29IwiBt

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=365994825852-2qgkgd1p28pag5i9f1dgbpo5sdm3gn6p.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8085/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Force account selection for Google OAuth
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
